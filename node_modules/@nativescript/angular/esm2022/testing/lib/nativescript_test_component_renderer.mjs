import { Injectable } from '@angular/core';
import { TestComponentRenderer } from '@angular/core/testing';
import { ProxyViewContainer } from '@nativescript/core';
import { testingRootView } from './test-root-view';
import * as i0 from "@angular/core";
/**
 * A NativeScript based implementation of the TestComponentRenderer.
 */
export class NativeScriptTestComponentRenderer extends TestComponentRenderer {
    insertRootElement(rootElId) {
        const layout = new ProxyViewContainer();
        layout.id = rootElId;
        const rootLayout = testingRootView();
        while (rootLayout.getChildrenCount() > 0) {
            rootLayout.removeChild(rootLayout.getChildAt(0));
        }
        rootLayout.addChild(layout);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NativeScriptTestComponentRenderer, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NativeScriptTestComponentRenderer }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NativeScriptTestComponentRenderer, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlc2NyaXB0X3Rlc3RfY29tcG9uZW50X3JlbmRlcmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci90ZXN0aW5nL3NyYy9saWIvbmF0aXZlc2NyaXB0X3Rlc3RfY29tcG9uZW50X3JlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQUVuRDs7R0FFRztBQUVILE1BQU0sT0FBTyxpQ0FBa0MsU0FBUSxxQkFBcUI7SUFDMUUsaUJBQWlCLENBQUMsUUFBZ0I7UUFDaEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO1FBQ3hDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDO1FBRXJCLE1BQU0sVUFBVSxHQUFHLGVBQWUsRUFBRSxDQUFDO1FBQ3JDLE9BQU8sVUFBVSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDekMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkQsQ0FBQztRQUNELFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQzs4R0FWVSxpQ0FBaUM7a0hBQWpDLGlDQUFpQzs7MkZBQWpDLGlDQUFpQztrQkFEN0MsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRlc3RDb21wb25lbnRSZW5kZXJlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvdGVzdGluZyc7XG5pbXBvcnQgeyBQcm94eVZpZXdDb250YWluZXIgfSBmcm9tICdAbmF0aXZlc2NyaXB0L2NvcmUnO1xuaW1wb3J0IHsgdGVzdGluZ1Jvb3RWaWV3IH0gZnJvbSAnLi90ZXN0LXJvb3Qtdmlldyc7XG5cbi8qKlxuICogQSBOYXRpdmVTY3JpcHQgYmFzZWQgaW1wbGVtZW50YXRpb24gb2YgdGhlIFRlc3RDb21wb25lbnRSZW5kZXJlci5cbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5hdGl2ZVNjcmlwdFRlc3RDb21wb25lbnRSZW5kZXJlciBleHRlbmRzIFRlc3RDb21wb25lbnRSZW5kZXJlciB7XG4gIGluc2VydFJvb3RFbGVtZW50KHJvb3RFbElkOiBzdHJpbmcpIHtcbiAgICBjb25zdCBsYXlvdXQgPSBuZXcgUHJveHlWaWV3Q29udGFpbmVyKCk7XG4gICAgbGF5b3V0LmlkID0gcm9vdEVsSWQ7XG5cbiAgICBjb25zdCByb290TGF5b3V0ID0gdGVzdGluZ1Jvb3RWaWV3KCk7XG4gICAgd2hpbGUgKHJvb3RMYXlvdXQuZ2V0Q2hpbGRyZW5Db3VudCgpID4gMCkge1xuICAgICAgcm9vdExheW91dC5yZW1vdmVDaGlsZChyb290TGF5b3V0LmdldENoaWxkQXQoMCkpO1xuICAgIH1cbiAgICByb290TGF5b3V0LmFkZENoaWxkKGxheW91dCk7XG4gIH1cbn1cbiJdfQ==