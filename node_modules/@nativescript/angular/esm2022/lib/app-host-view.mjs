import { ContentView, ProxyViewContainer, GridLayout, Application } from '@nativescript/core';
export class AppHostView extends ContentView {
    constructor(backgroundColor) {
        super();
        this.timeout = -1;
        this.backgroundColor = backgroundColor;
    }
    get ngAppRoot() {
        return this._ngAppRoot;
    }
    set ngAppRoot(value) {
        this._ngAppRoot = value;
    }
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    //@ts-ignore
    get content() {
        return this._content;
    }
    set content(value) {
        if (this._content) {
            this._content.parentNode = undefined;
        }
        this._content = value;
        if (value) {
            this._content.parentNode = this;
        }
        this.ngAppRoot = value;
        if (this._content instanceof ProxyViewContainer) {
            const grid = new GridLayout();
            grid.backgroundColor = this.backgroundColor;
            grid.addChild(this._content);
            this.ngAppRoot = grid;
        }
        if (this.ngAppRoot) {
            // maybe use this approach
            // this.scheduleRootChange();
        }
    }
    scheduleRootChange() {
        if (this.timeout === -1) {
            this.timeout = setTimeout(() => {
                //console.log(this.ngAppRoot);
                Application.resetRootView({
                    create: () => this.content,
                });
                this.timeout = -1;
            }, 0);
        }
    }
}
export class AppHostAsyncView extends GridLayout {
    constructor(backgroundColor) {
        super();
        this.backgroundColor = backgroundColor;
    }
    get ngAppRoot() {
        return this;
    }
    set ngAppRoot(value) {
        // ignored
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWhvc3Qtdmlldy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2FuZ3VsYXIvc3JjL2xpYi9hcHAtaG9zdC12aWV3LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQVEsa0JBQWtCLEVBQUUsVUFBVSxFQUFTLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTNHLE1BQU0sT0FBTyxXQUFZLFNBQVEsV0FBVztJQUsxQyxZQUFZLGVBQXNCO1FBQ2hDLEtBQUssRUFBRSxDQUFDO1FBSEYsWUFBTyxHQUFRLENBQUMsQ0FBQyxDQUFDO1FBSXhCLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO0lBQ3pDLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksU0FBUyxDQUFDLEtBQVc7UUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQztJQUNELDZEQUE2RDtJQUM3RCxZQUFZO0lBQ1osSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxJQUFJLE9BQU8sQ0FBQyxLQUFXO1FBQ3JCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUN2QyxDQUFDO1FBRUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFFdEIsSUFBSSxLQUFLLEVBQUUsQ0FBQztZQUNWLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUNsQyxDQUFDO1FBRUQsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFFdkIsSUFBSSxJQUFJLENBQUMsUUFBUSxZQUFZLGtCQUFrQixFQUFFLENBQUM7WUFDaEQsTUFBTSxJQUFJLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztZQUM5QixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7WUFDNUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDeEIsQ0FBQztRQUNELElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQ25CLDBCQUEwQjtZQUMxQiw2QkFBNkI7UUFDL0IsQ0FBQztJQUNILENBQUM7SUFFRCxrQkFBa0I7UUFDaEIsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDeEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUM3Qiw4QkFBOEI7Z0JBQzlCLFdBQVcsQ0FBQyxhQUFhLENBQUM7b0JBQ3hCLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTztpQkFDM0IsQ0FBQyxDQUFDO2dCQUNILElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDcEIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ1IsQ0FBQztJQUNILENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxVQUFVO0lBQzlDLFlBQVksZUFBc0I7UUFDaEMsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztJQUN6QyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsSUFBSSxTQUFTLENBQUMsS0FBVztRQUN2QixVQUFVO0lBQ1osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudFZpZXcsIFZpZXcsIFByb3h5Vmlld0NvbnRhaW5lciwgR3JpZExheW91dCwgQ29sb3IsIEFwcGxpY2F0aW9uIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcblxuZXhwb3J0IGNsYXNzIEFwcEhvc3RWaWV3IGV4dGVuZHMgQ29udGVudFZpZXcge1xuICBwcml2YXRlIF9uZ0FwcFJvb3Q6IFZpZXc7XG4gIHByaXZhdGUgX2NvbnRlbnQ6IFZpZXc7XG4gIHByaXZhdGUgdGltZW91dDogYW55ID0gLTE7XG5cbiAgY29uc3RydWN0b3IoYmFja2dyb3VuZENvbG9yOiBDb2xvcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5iYWNrZ3JvdW5kQ29sb3IgPSBiYWNrZ3JvdW5kQ29sb3I7XG4gIH1cblxuICBnZXQgbmdBcHBSb290KCk6IFZpZXcge1xuICAgIHJldHVybiB0aGlzLl9uZ0FwcFJvb3Q7XG4gIH1cblxuICBzZXQgbmdBcHBSb290KHZhbHVlOiBWaWV3KSB7XG4gICAgdGhpcy5fbmdBcHBSb290ID0gdmFsdWU7XG4gIH1cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuICAvL0B0cy1pZ25vcmVcbiAgZ2V0IGNvbnRlbnQoKTogVmlldyB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbnRlbnQ7XG4gIH1cblxuICBzZXQgY29udGVudCh2YWx1ZTogVmlldykge1xuICAgIGlmICh0aGlzLl9jb250ZW50KSB7XG4gICAgICB0aGlzLl9jb250ZW50LnBhcmVudE5vZGUgPSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgdGhpcy5fY29udGVudCA9IHZhbHVlO1xuXG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLl9jb250ZW50LnBhcmVudE5vZGUgPSB0aGlzO1xuICAgIH1cblxuICAgIHRoaXMubmdBcHBSb290ID0gdmFsdWU7XG5cbiAgICBpZiAodGhpcy5fY29udGVudCBpbnN0YW5jZW9mIFByb3h5Vmlld0NvbnRhaW5lcikge1xuICAgICAgY29uc3QgZ3JpZCA9IG5ldyBHcmlkTGF5b3V0KCk7XG4gICAgICBncmlkLmJhY2tncm91bmRDb2xvciA9IHRoaXMuYmFja2dyb3VuZENvbG9yO1xuICAgICAgZ3JpZC5hZGRDaGlsZCh0aGlzLl9jb250ZW50KTtcbiAgICAgIHRoaXMubmdBcHBSb290ID0gZ3JpZDtcbiAgICB9XG4gICAgaWYgKHRoaXMubmdBcHBSb290KSB7XG4gICAgICAvLyBtYXliZSB1c2UgdGhpcyBhcHByb2FjaFxuICAgICAgLy8gdGhpcy5zY2hlZHVsZVJvb3RDaGFuZ2UoKTtcbiAgICB9XG4gIH1cblxuICBzY2hlZHVsZVJvb3RDaGFuZ2UoKSB7XG4gICAgaWYgKHRoaXMudGltZW91dCA9PT0gLTEpIHtcbiAgICAgIHRoaXMudGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMubmdBcHBSb290KTtcbiAgICAgICAgQXBwbGljYXRpb24ucmVzZXRSb290Vmlldyh7XG4gICAgICAgICAgY3JlYXRlOiAoKSA9PiB0aGlzLmNvbnRlbnQsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSAtMTtcbiAgICAgIH0sIDApO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQXBwSG9zdEFzeW5jVmlldyBleHRlbmRzIEdyaWRMYXlvdXQge1xuICBjb25zdHJ1Y3RvcihiYWNrZ3JvdW5kQ29sb3I6IENvbG9yKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmJhY2tncm91bmRDb2xvciA9IGJhY2tncm91bmRDb2xvcjtcbiAgfVxuXG4gIGdldCBuZ0FwcFJvb3QoKTogVmlldyB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzZXQgbmdBcHBSb290KHZhbHVlOiBWaWV3KSB7XG4gICAgLy8gaWdub3JlZFxuICB9XG59XG4iXX0=