import { Directive, ElementRef } from '@angular/core';
import { Frame } from '@nativescript/core';
import * as i0 from "@angular/core";
export function customFrameDirectiveFactory(v) {
    return v.element.nativeElement;
}
export class FrameDirective {
    constructor(element) {
        this.element = element;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: FrameDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: FrameDirective, isStandalone: true, selector: "Frame", providers: [
            {
                provide: Frame,
                useFactory: customFrameDirectiveFactory,
                deps: [FrameDirective],
            },
        ], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: FrameDirective, decorators: [{
            type: Directive,
            args: [{
                    // eslint-disable-next-line @angular-eslint/directive-selector
                    selector: 'Frame',
                    standalone: true,
                    providers: [
                        {
                            provide: Frame,
                            useFactory: customFrameDirectiveFactory,
                            deps: [FrameDirective],
                        },
                    ],
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJhbWUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9zcmMvbGliL2Nkay9mcmFtZS1wYWdlL2ZyYW1lLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7O0FBRTNDLE1BQU0sVUFBVSwyQkFBMkIsQ0FBQyxDQUFpQjtJQUMzRCxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDO0FBQ2pDLENBQUM7QUFjRCxNQUFNLE9BQU8sY0FBYztJQUN6QixZQUFtQixPQUEwQjtRQUExQixZQUFPLEdBQVAsT0FBTyxDQUFtQjtJQUFHLENBQUM7OEdBRHRDLGNBQWM7a0dBQWQsY0FBYyxvREFSZDtZQUNUO2dCQUNFLE9BQU8sRUFBRSxLQUFLO2dCQUNkLFVBQVUsRUFBRSwyQkFBMkI7Z0JBQ3ZDLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQzthQUN2QjtTQUNGOzsyRkFFVSxjQUFjO2tCQVoxQixTQUFTO21CQUFDO29CQUNULDhEQUE4RDtvQkFDOUQsUUFBUSxFQUFFLE9BQU87b0JBQ2pCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLEtBQUs7NEJBQ2QsVUFBVSxFQUFFLDJCQUEyQjs0QkFDdkMsSUFBSSxFQUFFLGdCQUFnQjt5QkFDdkI7cUJBQ0Y7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZyYW1lIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGN1c3RvbUZyYW1lRGlyZWN0aXZlRmFjdG9yeSh2OiBGcmFtZURpcmVjdGl2ZSkge1xuICByZXR1cm4gdi5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG59XG5cbkBEaXJlY3RpdmUoe1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2RpcmVjdGl2ZS1zZWxlY3RvclxuICBzZWxlY3RvcjogJ0ZyYW1lJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogRnJhbWUsXG4gICAgICB1c2VGYWN0b3J5OiBjdXN0b21GcmFtZURpcmVjdGl2ZUZhY3RvcnksXG4gICAgICBkZXBzOiBbRnJhbWVEaXJlY3RpdmVdLFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEZyYW1lRGlyZWN0aXZlIHtcbiAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnQ6IEVsZW1lbnRSZWY8RnJhbWU+KSB7fVxufVxuIl19