import { AbsoluteLayout, ActivityIndicator, Button, ContentView, DatePicker, DockLayout, FlexboxLayout, FormattedString, Frame, GridLayout, HtmlView, Image, Label, ListPicker, ListView, Page, Placeholder, Progress, ProxyViewContainer, Repeater, RootLayout, ScrollView, SearchBar, SegmentedBar, SegmentedBarItem, Slider, Span, StackLayout, Switch, TabView, TextField, TextView, TimePicker, WebView, WrapLayout } from '@nativescript/core';
import { formattedStringMeta, frameMeta, textBaseMeta } from './metas';
import { registerElement } from './registry';
// Register default NativeScript components
// Note: ActionBar related components are registerd together with action-bar directives.
export function registerNativeScriptViewComponents() {
    if (!global.__ngRegisteredViews) {
        global.__ngRegisteredViews = true;
        registerElement('AbsoluteLayout', () => AbsoluteLayout);
        registerElement('ActivityIndicator', () => ActivityIndicator);
        registerElement('Button', () => Button, textBaseMeta);
        registerElement('ContentView', () => ContentView);
        registerElement('DatePicker', () => DatePicker);
        registerElement('DockLayout', () => DockLayout);
        registerElement('Frame', () => Frame, frameMeta);
        registerElement('GridLayout', () => GridLayout);
        registerElement('HtmlView', () => HtmlView);
        registerElement('Image', () => Image);
        // Parse5 changes <Image> tags to <img>. WTF!
        registerElement('img', () => Image);
        registerElement('Label', () => Label, textBaseMeta);
        registerElement('ListPicker', () => ListPicker);
        registerElement('ListView', () => ListView);
        registerElement('Page', () => Page);
        registerElement('Placeholder', () => Placeholder);
        registerElement('Progress', () => Progress);
        registerElement('ProxyViewContainer', () => ProxyViewContainer);
        registerElement('Repeater', () => Repeater);
        registerElement('RootLayout', () => RootLayout);
        registerElement('ScrollView', () => ScrollView);
        registerElement('SearchBar', () => SearchBar);
        registerElement('SegmentedBar', () => SegmentedBar);
        registerElement('SegmentedBarItem', () => SegmentedBarItem);
        registerElement('Slider', () => Slider);
        registerElement('StackLayout', () => StackLayout);
        registerElement('FlexboxLayout', () => FlexboxLayout);
        registerElement('Switch', () => Switch);
        registerElement('TabView', () => TabView);
        registerElement('TextField', () => TextField, textBaseMeta);
        registerElement('TextView', () => TextView, textBaseMeta);
        registerElement('TimePicker', () => TimePicker);
        registerElement('WebView', () => WebView);
        registerElement('WrapLayout', () => WrapLayout);
        registerElement('FormattedString', () => FormattedString, formattedStringMeta);
        registerElement('Span', () => Span);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLXZpZXdzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9zcmMvbGliL2VsZW1lbnQtcmVnaXN0cnkvY29tbW9uLXZpZXdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcmIsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDdkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUU3QywyQ0FBMkM7QUFDM0Msd0ZBQXdGO0FBQ3hGLE1BQU0sVUFBVSxrQ0FBa0M7SUFDaEQsSUFBSSxDQUFPLE1BQU8sQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQ2pDLE1BQU8sQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUM7UUFDekMsZUFBZSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3hELGVBQWUsQ0FBQyxtQkFBbUIsRUFBRSxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQzlELGVBQWUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3RELGVBQWUsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDbEQsZUFBZSxDQUFDLFlBQVksRUFBRSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNoRCxlQUFlLENBQUMsWUFBWSxFQUFFLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hELGVBQWUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ2pELGVBQWUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEQsZUFBZSxDQUFDLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1QyxlQUFlLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RDLDZDQUE2QztRQUM3QyxlQUFlLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3BELGVBQWUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEQsZUFBZSxDQUFDLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1QyxlQUFlLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BDLGVBQWUsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDbEQsZUFBZSxDQUFDLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1QyxlQUFlLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxFQUFFLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNoRSxlQUFlLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzVDLGVBQWUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEQsZUFBZSxDQUFDLFlBQVksRUFBRSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNoRCxlQUFlLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzlDLGVBQWUsQ0FBQyxjQUFjLEVBQUUsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDcEQsZUFBZSxDQUFDLGtCQUFrQixFQUFFLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDNUQsZUFBZSxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxlQUFlLENBQUMsYUFBYSxFQUFFLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2xELGVBQWUsQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDdEQsZUFBZSxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxlQUFlLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFDLGVBQWUsQ0FBQyxXQUFXLEVBQUUsR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQzVELGVBQWUsQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQzFELGVBQWUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEQsZUFBZSxDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxQyxlQUFlLENBQUMsWUFBWSxFQUFFLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hELGVBQWUsQ0FBQyxpQkFBaUIsRUFBRSxHQUFHLEVBQUUsQ0FBQyxlQUFlLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztRQUMvRSxlQUFlLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RDLENBQUM7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzb2x1dGVMYXlvdXQsIEFjdGl2aXR5SW5kaWNhdG9yLCBCdXR0b24sIENvbnRlbnRWaWV3LCBEYXRlUGlja2VyLCBEb2NrTGF5b3V0LCBGbGV4Ym94TGF5b3V0LCBGb3JtYXR0ZWRTdHJpbmcsIEZyYW1lLCBHcmlkTGF5b3V0LCBIdG1sVmlldywgSW1hZ2UsIExhYmVsLCBMaXN0UGlja2VyLCBMaXN0VmlldywgUGFnZSwgUGxhY2Vob2xkZXIsIFByb2dyZXNzLCBQcm94eVZpZXdDb250YWluZXIsIFJlcGVhdGVyLCBSb290TGF5b3V0LCBTY3JvbGxWaWV3LCBTZWFyY2hCYXIsIFNlZ21lbnRlZEJhciwgU2VnbWVudGVkQmFySXRlbSwgU2xpZGVyLCBTcGFuLCBTdGFja0xheW91dCwgU3dpdGNoLCBUYWJWaWV3LCBUZXh0RmllbGQsIFRleHRWaWV3LCBUaW1lUGlja2VyLCBXZWJWaWV3LCBXcmFwTGF5b3V0IH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcbmltcG9ydCB7IGZvcm1hdHRlZFN0cmluZ01ldGEsIGZyYW1lTWV0YSwgdGV4dEJhc2VNZXRhIH0gZnJvbSAnLi9tZXRhcyc7XG5pbXBvcnQgeyByZWdpc3RlckVsZW1lbnQgfSBmcm9tICcuL3JlZ2lzdHJ5JztcblxuLy8gUmVnaXN0ZXIgZGVmYXVsdCBOYXRpdmVTY3JpcHQgY29tcG9uZW50c1xuLy8gTm90ZTogQWN0aW9uQmFyIHJlbGF0ZWQgY29tcG9uZW50cyBhcmUgcmVnaXN0ZXJkIHRvZ2V0aGVyIHdpdGggYWN0aW9uLWJhciBkaXJlY3RpdmVzLlxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyTmF0aXZlU2NyaXB0Vmlld0NvbXBvbmVudHMoKSB7XG4gIGlmICghKDxhbnk+Z2xvYmFsKS5fX25nUmVnaXN0ZXJlZFZpZXdzKSB7XG4gICAgKDxhbnk+Z2xvYmFsKS5fX25nUmVnaXN0ZXJlZFZpZXdzID0gdHJ1ZTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0Fic29sdXRlTGF5b3V0JywgKCkgPT4gQWJzb2x1dGVMYXlvdXQpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnQWN0aXZpdHlJbmRpY2F0b3InLCAoKSA9PiBBY3Rpdml0eUluZGljYXRvcik7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdCdXR0b24nLCAoKSA9PiBCdXR0b24sIHRleHRCYXNlTWV0YSk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdDb250ZW50VmlldycsICgpID0+IENvbnRlbnRWaWV3KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0RhdGVQaWNrZXInLCAoKSA9PiBEYXRlUGlja2VyKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0RvY2tMYXlvdXQnLCAoKSA9PiBEb2NrTGF5b3V0KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0ZyYW1lJywgKCkgPT4gRnJhbWUsIGZyYW1lTWV0YSk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdHcmlkTGF5b3V0JywgKCkgPT4gR3JpZExheW91dCk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdIdG1sVmlldycsICgpID0+IEh0bWxWaWV3KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0ltYWdlJywgKCkgPT4gSW1hZ2UpO1xuICAgIC8vIFBhcnNlNSBjaGFuZ2VzIDxJbWFnZT4gdGFncyB0byA8aW1nPi4gV1RGIVxuICAgIHJlZ2lzdGVyRWxlbWVudCgnaW1nJywgKCkgPT4gSW1hZ2UpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnTGFiZWwnLCAoKSA9PiBMYWJlbCwgdGV4dEJhc2VNZXRhKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0xpc3RQaWNrZXInLCAoKSA9PiBMaXN0UGlja2VyKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ0xpc3RWaWV3JywgKCkgPT4gTGlzdFZpZXcpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnUGFnZScsICgpID0+IFBhZ2UpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnUGxhY2Vob2xkZXInLCAoKSA9PiBQbGFjZWhvbGRlcik7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdQcm9ncmVzcycsICgpID0+IFByb2dyZXNzKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1Byb3h5Vmlld0NvbnRhaW5lcicsICgpID0+IFByb3h5Vmlld0NvbnRhaW5lcik7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdSZXBlYXRlcicsICgpID0+IFJlcGVhdGVyKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1Jvb3RMYXlvdXQnLCAoKSA9PiBSb290TGF5b3V0KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1Njcm9sbFZpZXcnLCAoKSA9PiBTY3JvbGxWaWV3KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1NlYXJjaEJhcicsICgpID0+IFNlYXJjaEJhcik7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdTZWdtZW50ZWRCYXInLCAoKSA9PiBTZWdtZW50ZWRCYXIpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnU2VnbWVudGVkQmFySXRlbScsICgpID0+IFNlZ21lbnRlZEJhckl0ZW0pO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnU2xpZGVyJywgKCkgPT4gU2xpZGVyKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1N0YWNrTGF5b3V0JywgKCkgPT4gU3RhY2tMYXlvdXQpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnRmxleGJveExheW91dCcsICgpID0+IEZsZXhib3hMYXlvdXQpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnU3dpdGNoJywgKCkgPT4gU3dpdGNoKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1RhYlZpZXcnLCAoKSA9PiBUYWJWaWV3KTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1RleHRGaWVsZCcsICgpID0+IFRleHRGaWVsZCwgdGV4dEJhc2VNZXRhKTtcbiAgICByZWdpc3RlckVsZW1lbnQoJ1RleHRWaWV3JywgKCkgPT4gVGV4dFZpZXcsIHRleHRCYXNlTWV0YSk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdUaW1lUGlja2VyJywgKCkgPT4gVGltZVBpY2tlcik7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdXZWJWaWV3JywgKCkgPT4gV2ViVmlldyk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdXcmFwTGF5b3V0JywgKCkgPT4gV3JhcExheW91dCk7XG4gICAgcmVnaXN0ZXJFbGVtZW50KCdGb3JtYXR0ZWRTdHJpbmcnLCAoKSA9PiBGb3JtYXR0ZWRTdHJpbmcsIGZvcm1hdHRlZFN0cmluZ01ldGEpO1xuICAgIHJlZ2lzdGVyRWxlbWVudCgnU3BhbicsICgpID0+IFNwYW4pO1xuICB9XG59XG4iXX0=