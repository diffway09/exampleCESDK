import { unsetValue } from '@nativescript/core';
import { isBlank } from '../../utils/lang-facade';
export class BaseValueAccessor {
    constructor(view) {
        this.view = view;
        this.pendingChangeNotification = 0;
        this.onChange = () => {
            //
        };
        this.onTouched = () => {
            //
        };
    }
    registerOnChange(fn) {
        this.onChange = (arg) => {
            if (this.pendingChangeNotification) {
                clearTimeout(this.pendingChangeNotification);
            }
            this.pendingChangeNotification = setTimeout(() => {
                this.pendingChangeNotification = 0;
                fn(arg);
            }, 20);
        };
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.view.isEnabled = !isDisabled;
    }
    writeValue(_) {
        //
    }
    normalizeValue(value) {
        return isBlank(value) ? unsetValue : value;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS12YWx1ZS1hY2Nlc3Nvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2FuZ3VsYXIvc3JjL2xpYi9mb3Jtcy92YWx1ZS1hY2Nlc3NvcnMvYmFzZS12YWx1ZS1hY2Nlc3Nvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQVEsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRWxELE1BQU0sT0FBTyxpQkFBaUI7SUFTNUIsWUFBbUIsSUFBVztRQUFYLFNBQUksR0FBSixJQUFJLENBQU87UUFSdEIsOEJBQXlCLEdBQVEsQ0FBQyxDQUFDO1FBQzNDLGFBQVEsR0FBMEIsR0FBRyxFQUFFO1lBQ3JDLEVBQUU7UUFDSixDQUFDLENBQUM7UUFDRixjQUFTLEdBQUcsR0FBRyxFQUFFO1lBQ2YsRUFBRTtRQUNKLENBQUMsQ0FBQztJQUUrQixDQUFDO0lBRWxDLGdCQUFnQixDQUFDLEVBQW9CO1FBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUN0QixJQUFJLElBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO2dCQUNuQyxZQUFZLENBQUMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDL0MsQ0FBQztZQUNELElBQUksQ0FBQyx5QkFBeUIsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUMvQyxJQUFJLENBQUMseUJBQXlCLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDVixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDVCxDQUFDLENBQUM7SUFDSixDQUFDO0lBRUQsaUJBQWlCLENBQUMsRUFBYztRQUM5QixJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsZ0JBQWdCLENBQUMsVUFBbUI7UUFDbEMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxVQUFVLENBQUM7SUFDcEMsQ0FBQztJQUVELFVBQVUsQ0FBQyxDQUFNO1FBQ2YsRUFBRTtJQUNKLENBQUM7SUFFUyxjQUFjLENBQUMsS0FBVTtRQUNqQyxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDN0MsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBWaWV3LCB1bnNldFZhbHVlIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcblxuaW1wb3J0IHsgaXNCbGFuayB9IGZyb20gJy4uLy4uL3V0aWxzL2xhbmctZmFjYWRlJztcblxuZXhwb3J0IGNsYXNzIEJhc2VWYWx1ZUFjY2Vzc29yPFRWaWV3IGV4dGVuZHMgVmlldz4gaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gIHByaXZhdGUgcGVuZGluZ0NoYW5nZU5vdGlmaWNhdGlvbjogYW55ID0gMDtcbiAgb25DaGFuZ2U6IChjaGFuZ2U6IGFueSkgPT4gdm9pZCA9ICgpID0+IHtcbiAgICAvL1xuICB9O1xuICBvblRvdWNoZWQgPSAoKSA9PiB7XG4gICAgLy9cbiAgfTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdmlldzogVFZpZXcpIHt9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogKF86IGFueSkgPT4gdm9pZCk6IHZvaWQge1xuICAgIHRoaXMub25DaGFuZ2UgPSAoYXJnKSA9PiB7XG4gICAgICBpZiAodGhpcy5wZW5kaW5nQ2hhbmdlTm90aWZpY2F0aW9uKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnBlbmRpbmdDaGFuZ2VOb3RpZmljYXRpb24pO1xuICAgICAgfVxuICAgICAgdGhpcy5wZW5kaW5nQ2hhbmdlTm90aWZpY2F0aW9uID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMucGVuZGluZ0NoYW5nZU5vdGlmaWNhdGlvbiA9IDA7XG4gICAgICAgIGZuKGFyZyk7XG4gICAgICB9LCAyMCk7XG4gICAgfTtcbiAgfVxuXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiAoKSA9PiB2b2lkKTogdm9pZCB7XG4gICAgdGhpcy5vblRvdWNoZWQgPSBmbjtcbiAgfVxuXG4gIHNldERpc2FibGVkU3RhdGUoaXNEaXNhYmxlZDogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMudmlldy5pc0VuYWJsZWQgPSAhaXNEaXNhYmxlZDtcbiAgfVxuXG4gIHdyaXRlVmFsdWUoXzogYW55KSB7XG4gICAgLy9cbiAgfVxuXG4gIHByb3RlY3RlZCBub3JtYWxpemVWYWx1ZSh2YWx1ZTogYW55KTogYW55IHtcbiAgICByZXR1cm4gaXNCbGFuayh2YWx1ZSkgPyB1bnNldFZhbHVlIDogdmFsdWU7XG4gIH1cbn1cbiJdfQ==